#### 202302 SXH RNAseq

# The rnaseq data in this paper is generated by BGI； In the following, I support anoter worflow(Just as reference) 

#### 0.make env.

```
cd projectpath
projectpath="/home/zju/桌面/202302_SXiaoHui/RNAseq"


mkdir 0.ref 1.fq 2.qc 3.trim 4.trim_qc 5.alignment 6.featureCounts

# mv
#find ../2023cuttag_2_Cleandata |grep fq.gz |xargs -I file  mv file #../2023cuttag_2_Cleandata/1.fq

sudo chmod 777 -R *

find $projectPath |grep raw |grep fq.gz |xargs -I file  mv file $projectpath/1.fq


# name structure
DMSO_1_1_fq.gz
DMSO_1_2_fq.gz
```



#### 1.QC---fastqc

```sh

#ln -s $projectpath/1.fq/*gz 

nohup fastqc -t 80 -o $projectpath/2.qc $projectpath/1.fq/*fq.gz &

#or loop
mkdir ./2.qc |ls ./1.fq/*.fq.gz | while read i
do
  xargs fastqc -t 80 -o ./2.qc/
done

#MultiQC FastQC result
multiqc $projectpath/2.qc 
mv *mu* ./2.qc
```



#### 2.filter

##### 2.1 trim_galore

```sh
#multi-sample
ls  $projectpath/1.fq |grep 1.fq |cut -d _ -f 1,2 |while read id 
do
trim_galore  --phred33 -q 20 --length 36 --stringency 3 \
--paired  $projectpath/1.fq/${id}_1.fq.gz $projectpath/1.fq/${id}_2.fq.gz \
 -o $projectpath/3.trim
done 

# single sample
for id in D1
do 
trim_galore  --phred33 -q 20 --length 36 --stringency 3 \
--paired  $projectpath/1.fq/${id}.R1.fq.gz $projectpath/1.fq/${id}.R2.fq.gz \
 -o $projectpath/3.trim
done 


```



#### 3.trim_QC

```
fastqc -t 80 -o $projectpath/4.trim_qc $projectpath/3.trim/*fq.gz 

#or loop
ls ./1.fq/*.fq.gz | while read i
do
  xargs fastqc -t 80 -o ./2.fastqc/
done

#MultiQC FastQC result
multiqc $projectpath/4.trim_qc
mv *mu* ./4.trim_qc
```



#### 4.alignment

cd $projectpath/0.ref

wget -c ftp://ftp.ensembl.org/pub/release-105/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz

wget ftp://ftp.ensembl.org/pub/release-105/gtf/homo_sapiens/Homo_sapiens.GRCh38.105.gtf.gz
```



##### 3.2 alignmnt ：hisat2

```sh
cd  $projectpath/0.ref

#Hisat2 index
hisat2-build $projectpath/0.ref/Homo_sapiens.GRCH38.dna.primary_assembly.fa ./GRCH38

# genome ht2 
index=$projectpath/0.ref/GRCH38/genome
#######################################################################################
#hisat2
hisat2 -p 50 -x $index -1 $projectpath/3.trim/D1.R1_val_1.fq.gz -2 $projectpath/3.trim/D1.R2_val_2.fq.gz -S $projectpath/5.alignment/D1.Hisat_aln.sam

#sam->bam
samtools sort -@ 3 -o SRR1039510.Hisat_aln.sorted.bam SRR1039510.Hisat_aln.sam

#bam index
samtools index SRR1039510.Hisat——aln.sorted.bam SRR1039510.Hisat_aln.sam
########################################################################################

#loop

nohup ls ./3.trim |grep val_1.fq.gz |cut -d _ -f 1,2  | while read id 
do
hisat2 -p 50 -x ${index} \
-1 $projectpath/3.trim/${id}_1_val_1.fq.gz \
-2 $projectpath/3.trim/${id}_2_val_2.fq.gz 2>${id}.log | samtools sort -@ 50 -o $projectpath/5.alignment/${id}.Hisat_aln.sorted.bam - && samtools index $projectpath/5.alignment/${id}.Hisat_aln.sorted.bam $projectpath/5.alignment/${id}.Hisat_aln.sorted.bam.bai
done 2> $projectpath/5.alignment/Hisat_alignment.log.log &

# 查看任务
jobs 


# multiqc
multiqc -o ./5.alignment/ *log

```



#### 5.Qun.

##### 5.1 featureCounts

```sh
#ensemble 
gtf=/home/zju/桌面/202302_SXiaoHui/RNAseq/0.ref/Homo_sapiens.GRCh38.105.gtf.gz

## Genocode ---匹配度会差一些，建议比对与注释保持版本一致（一定要同一机构的） ##
# gtf=/home/zju/桌面/2023_ZM_RNA/0.ref/gencode.v43.annotation.gtf.gz
# 以下不行---shell 语法错误
# gtf=$projctpath/0.ref/gencode.v43.annotation.gtf.gz


#使用featureCounts对BAM文件进行定量
featureCounts -T 50 -p -t exon -g gene_id -a $gtf -o ./6.featureCounts/D3_E3_expression.txt  ./5.alignment/*.sorted.bam

#multiqc  featureCounts result
multiqc ./6.featureCounts/D3_E3_expression.txt.summary
mv *multi* ./6.featureCounts

# Get gene expression
cat ./6.featureCounts/D3_E3_expression.txt | cut -f1,7- >./6.featureCounts/D3_M3_count.txt
```



#### 6.bigwig (IGV)

```shell
# bigwig file
mkdir  ./7.bigwig                                                                       
ls ./7.removeDuplicate |grep sorted.rmDup.sam |cut -d . -f 1,1 \
| while read id; do                                                                 
samtools sort -@80 -o ./7.removeDuplicate/${id}.sorted.bam ./7.removeDuplicate/${id}.mapped.bam
done


# index
ls ./5.alignment |grep sorted.bam$ |cut -d . -f 1,1 \
| while read id; do                                             
samtools index ./5.alignment/${id}.Hisat_aln.sorted.bam                                   
done


# bamCoverage
ls ./5.alignment |grep sorted.bam$ |cut -d . -f 1,1 \
| while read id; do 
bamCoverage -b ./5.alignment/${id}.Hisat_aln.sorted.bam -o ./7.bigwig/${id}_raw.bw      
done 
```

